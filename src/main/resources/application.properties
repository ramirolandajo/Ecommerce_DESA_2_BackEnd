spring.application.name=Ecommerce

# Configuraci?n de Kafka para mockeo local
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=ecommerce-mock-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true

# Serializaci?n
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Configuraci?n de MySQL en Railway (modifica los valores seg?n tu instancia)
spring.datasource.url=jdbc:mysql://<host>:<port>/<database>?useSSL=false&serverTimezone=UTC
spring.datasource.username=<usuario>
spring.datasource.password=<contrasea>
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Otros ajustes
server.port=8080
